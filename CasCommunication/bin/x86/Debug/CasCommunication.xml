<?xml version="1.0"?>
<doc>
<assembly>
<name>
CasCommunication
</name>
</assembly>
<members>
<member name="T:CasCommunication.My.Resources.Resources">
<summary>
  Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
</summary>
</member>
<member name="P:CasCommunication.My.Resources.Resources.ResourceManager">
<summary>
  Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
</summary>
</member>
<member name="P:CasCommunication.My.Resources.Resources.Culture">
<summary>
  Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
  Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
</summary>
</member>
<member name="P:CasCommunication.cCAS140.ReadDeviceTypeNames">
 <summary>
 Get Array of DeviceTypeNames. Used to display DeviceTypeName as clear text instead of number
 </summary>
 <value></value>
 <returns>Array of DevicetypeNames</returns>
 <remarks></remarks>
</member>
<member name="P:CasCommunication.cCAS140.ReadDeviceTypeOptionNames">
 <summary>
 Get Array of DeviceTypeOptionNames. Used to display DeviceTypeOptionName as clear text instead of number
 </summary>
 <value></value>
 <returns>Array of DevicetypeOptionNames</returns>
 <remarks>Array of DeviceTypeOptionNames generated when user calls SetDeviceTypebyIndex</remarks>
</member>
<member name="P:CasCommunication.cCAS140.ConfigFileName">
 <summary>
 Property to get the Configuration File Name incl. path and drive or to set this property
 </summary>
 <value>Configuration File Name incl. path and drive </value>
 <returns>Configuration File Name incl. path and drive</returns>
 <remarks></remarks>
</member>
<member name="P:CasCommunication.cCAS140.CalibFileName">
 <summary>
 Property to get the Calibration File Name incl. path and drive or to set this property
 </summary>
 <value>Calibration File Name incl. path and drive </value>
 <returns>Calibration File Name incl. path and drive</returns>
 <remarks></remarks>
</member>
<member name="M:CasCommunication.cCAS140.GetDeviceTypes">
 <summary>
 Function to get all the available DeviceTypes. Returns the number of available interfaces. Array of DeviceTypenumber (integer) generated and array of DeviceTypeName (string) generated. 
 These arrays are private member of this class can be read with properties.
 </summary>
 <returns>Number of available devices</returns>
 <remarks>Function called in the constructor</remarks>
</member>
<member name="M:CasCommunication.cCAS140.GetDeviceTypeOptions">
 <summary>
 Function to get all the available DeviceTypeOptions. Returns the number of available DeviceTypeOptions. Array of DeviceTypeOptionnumber (integer) generated and array of DeviceTypeOptionNames (string) generated. 
 These arrays are private member of this class can be read with properties.
 </summary>
 <returns>Number of available DeviceTypeOptions</returns>
 <remarks>Function called when DeviceType is set</remarks>
</member>
<member name="M:CasCommunication.cCAS140.SetDeviceTypebyIndex(System.Int32)">
 <summary>
 Function sets the devicetype. Index has to be given and then you get number of the DeviceType. As not all devicetypes must be available maximum index is number of available devices -1
 </summary>
 <param name="index">index of the DeviceType. maximum index is number of available devices -1</param>
 <returns>DeviceType(number) if valid else -1 is returned. </returns>
 <remarks></remarks>
</member>
<member name="M:CasCommunication.cCAS140.SetDeviceTypeOptionbyIndex(System.Int32)">
 <summary>
 Function sets the devicetypeoptions. Index has to be given and then you get number of the DeviceTypeoption. As not all devicetypeoptions must be available maximum index is number of available devicetypeoptions -1
 </summary>
 <param name="index">index of the DeviceTypeOption. Maximum index is number of available devicetypeotpions -1</param>
 <returns>DeviceTypeOption(number) if valid else -1 is returned. </returns>
 <remarks></remarks>
</member>
<member name="M:CasCommunication.cCAS140.Init(System.String@,System.String,System.String)">
 <summary>
 Get Handle to the Device, load config and calibration file and perform initialization of the hardware.
 </summary>
 <param name="ACal">Set after initialization to the Calibration unit</param>
 <param name="AConfig">Path and Filename of Configuration File</param>
 <param name="ACalib">Path and Filename of Calibration File</param>
 <returns>True if initialization successful, False if initialization not successful, in that case an error message will be shown that is handled in the catch statement</returns>
 <remarks></remarks>
</member>
</members>
</doc>
